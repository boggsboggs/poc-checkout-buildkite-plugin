#!/usr/bin/env bash

set -euo pipefail

set -x

# Example BUILDKITE_REPO="git@github.com:Rippling/rippling-main.git"
REPO_NAME=${BUILDKITE_REPO##*/} #Strip up to the last '/'

S3_CACHE_ROOT="s3://com.rippling.cde-backup/boggsboggs/git-cache"
S3_REPO_PATH="${S3_CACHE_ROOT}/${REPO_NAME}"
TMP_STORAGE_PATH="/tmp/${REPO_NAME}.tar"


if ! [ -d "$BUILDKITE_BUILD_CHECKOUT_PATH/.git" ]; then
  echo "Need to download or clone ${REPO_NAME}"

  # Try to download it from S3
  echo "Attempting S3 download..."
  if ! aws s3 cp "$S3_REPO_PATH" "$TMP_STORAGE_PATH"; then
    echo "Failed to download from S3."

    echo "Running git clone..."
    ssh-keyscan github.com >> ~/.ssh/known_hosts # Add github.com to known_hosts
    git clone $BUILDKITE_GIT_CLONE_FLAGS "$BUILDKITE_REPO" "$BUILDKITE_BUILD_CHECKOUT_PATH"

    echo "Updating S3 Cache..."
    tar -cvf "$TMP_STORAGE_PATH" "$BUILDKITE_BUILD_CHECKOUT_PATH"
    s3 cp "$TMP_STORAGE_PATH" "$S3_REPO_PATH"
    exit 0
  fi

  echo "Unarchiving..."
  tar -xvf "$TMP_STORAGE_PATH" "$BUILDKITE_BUILD_CHECKOUT_PATH"
  echo "Done."
else
  echo "Git repo already exists at $BUILDKITE_BUILD_CHECKOUT_PATH/.git, nothing to do."
fi
